//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjektBD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CompanyModelContainer : DbContext
    {
        public CompanyModelContainer()
            : base("name=CompanyModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Computer> Computers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<V_CityCount> V_CityCount { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Composition> Compositions { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Salary> Salaries { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<R_EmpCom> R_EmpCom { get; set; }
        public virtual DbSet<R_EmpInfo> R_EmpInfo { get; set; }
        public virtual DbSet<R_EmpSal> R_EmpSal { get; set; }
    
        public virtual int DeleteAddress(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAddress", idParameter);
        }
    
        public virtual int InsertAddress(string st, Nullable<int> nr, string co, string ci, string con)
        {
            var stParameter = st != null ?
                new ObjectParameter("st", st) :
                new ObjectParameter("st", typeof(string));
    
            var nrParameter = nr.HasValue ?
                new ObjectParameter("nr", nr) :
                new ObjectParameter("nr", typeof(int));
    
            var coParameter = co != null ?
                new ObjectParameter("co", co) :
                new ObjectParameter("co", typeof(string));
    
            var ciParameter = ci != null ?
                new ObjectParameter("ci", ci) :
                new ObjectParameter("ci", typeof(string));
    
            var conParameter = con != null ?
                new ObjectParameter("con", con) :
                new ObjectParameter("con", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAddress", stParameter, nrParameter, coParameter, ciParameter, conParameter);
        }
    
        public virtual int UpdateAddress(Nullable<int> id, string st, Nullable<int> nr, string co, string ci, string con)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var stParameter = st != null ?
                new ObjectParameter("st", st) :
                new ObjectParameter("st", typeof(string));
    
            var nrParameter = nr.HasValue ?
                new ObjectParameter("nr", nr) :
                new ObjectParameter("nr", typeof(int));
    
            var coParameter = co != null ?
                new ObjectParameter("co", co) :
                new ObjectParameter("co", typeof(string));
    
            var ciParameter = ci != null ?
                new ObjectParameter("ci", ci) :
                new ObjectParameter("ci", typeof(string));
    
            var conParameter = con != null ?
                new ObjectParameter("con", con) :
                new ObjectParameter("con", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAddress", idParameter, stParameter, nrParameter, coParameter, ciParameter, conParameter);
        }
    
        public virtual int DeleteCompany(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCompany", idParameter);
        }
    
        public virtual int DeleteComputer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteComputer", idParameter);
        }
    
        public virtual int DeleteEmployee(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", idParameter);
        }
    
        public virtual int DeleteSalary(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSalary", idParameter);
        }
    
        public virtual int DeleteTeam(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTeam", idParameter);
        }
    
        public virtual int InsertCompany(Nullable<int> id_a, string name)
        {
            var id_aParameter = id_a.HasValue ?
                new ObjectParameter("id_a", id_a) :
                new ObjectParameter("id_a", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCompany", id_aParameter, nameParameter);
        }
    
        public virtual int InsertComputer(Nullable<int> id_e, string des)
        {
            var id_eParameter = id_e.HasValue ?
                new ObjectParameter("id_e", id_e) :
                new ObjectParameter("id_e", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertComputer", id_eParameter, desParameter);
        }
    
        public virtual int InsertEmployee(Nullable<int> id_a, string fn, string ln, string br)
        {
            var id_aParameter = id_a.HasValue ?
                new ObjectParameter("id_a", id_a) :
                new ObjectParameter("id_a", typeof(int));
    
            var fnParameter = fn != null ?
                new ObjectParameter("fn", fn) :
                new ObjectParameter("fn", typeof(string));
    
            var lnParameter = ln != null ?
                new ObjectParameter("ln", ln) :
                new ObjectParameter("ln", typeof(string));
    
            var brParameter = br != null ?
                new ObjectParameter("br", br) :
                new ObjectParameter("br", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmployee", id_aParameter, fnParameter, lnParameter, brParameter);
        }
    
        public virtual int InsertSalary(Nullable<int> id_e, string py, Nullable<int> yr, Nullable<int> mt)
        {
            var id_eParameter = id_e.HasValue ?
                new ObjectParameter("id_e", id_e) :
                new ObjectParameter("id_e", typeof(int));
    
            var pyParameter = py != null ?
                new ObjectParameter("py", py) :
                new ObjectParameter("py", typeof(string));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            var mtParameter = mt.HasValue ?
                new ObjectParameter("mt", mt) :
                new ObjectParameter("mt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSalary", id_eParameter, pyParameter, yrParameter, mtParameter);
        }
    
        public virtual int InsertTeam(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTeam", nameParameter);
        }
    
        public virtual int UpdateCompany(Nullable<int> id, Nullable<int> id_a, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_aParameter = id_a.HasValue ?
                new ObjectParameter("id_a", id_a) :
                new ObjectParameter("id_a", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCompany", idParameter, id_aParameter, nameParameter);
        }
    
        public virtual int UpdateComputer(Nullable<int> id, Nullable<int> id_emp, string des)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_empParameter = id_emp.HasValue ?
                new ObjectParameter("id_emp", id_emp) :
                new ObjectParameter("id_emp", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateComputer", idParameter, id_empParameter, desParameter);
        }
    
        public virtual int UpdateEmployee(Nullable<int> id, Nullable<int> id_a, string fn, string ln, string br)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_aParameter = id_a.HasValue ?
                new ObjectParameter("id_a", id_a) :
                new ObjectParameter("id_a", typeof(int));
    
            var fnParameter = fn != null ?
                new ObjectParameter("fn", fn) :
                new ObjectParameter("fn", typeof(string));
    
            var lnParameter = ln != null ?
                new ObjectParameter("ln", ln) :
                new ObjectParameter("ln", typeof(string));
    
            var brParameter = br != null ?
                new ObjectParameter("br", br) :
                new ObjectParameter("br", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployee", idParameter, id_aParameter, fnParameter, lnParameter, brParameter);
        }
    
        public virtual int UpdateSalary(Nullable<int> id, Nullable<int> id_e, string py, Nullable<int> yr, Nullable<int> mt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_eParameter = id_e.HasValue ?
                new ObjectParameter("id_e", id_e) :
                new ObjectParameter("id_e", typeof(int));
    
            var pyParameter = py != null ?
                new ObjectParameter("py", py) :
                new ObjectParameter("py", typeof(string));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            var mtParameter = mt.HasValue ?
                new ObjectParameter("mt", mt) :
                new ObjectParameter("mt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSalary", idParameter, id_eParameter, pyParameter, yrParameter, mtParameter);
        }
    
        public virtual int UpdateTeam(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTeam", idParameter, nameParameter);
        }
    
        public virtual int DeleteComposition(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteComposition", idParameter);
        }
    
        public virtual int DeleteProject(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProject", idParameter);
        }
    
        public virtual int DeleteTask(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTask", idParameter);
        }
    
        public virtual int InsertComposition(Nullable<int> id_e, Nullable<int> id_t)
        {
            var id_eParameter = id_e.HasValue ?
                new ObjectParameter("id_e", id_e) :
                new ObjectParameter("id_e", typeof(int));
    
            var id_tParameter = id_t.HasValue ?
                new ObjectParameter("id_t", id_t) :
                new ObjectParameter("id_t", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertComposition", id_eParameter, id_tParameter);
        }
    
        public virtual int InsertProject(Nullable<int> id_t, Nullable<int> id_c, Nullable<int> at, string des, string na, string bg)
        {
            var id_tParameter = id_t.HasValue ?
                new ObjectParameter("id_t", id_t) :
                new ObjectParameter("id_t", typeof(int));
    
            var id_cParameter = id_c.HasValue ?
                new ObjectParameter("id_c", id_c) :
                new ObjectParameter("id_c", typeof(int));
    
            var atParameter = at.HasValue ?
                new ObjectParameter("at", at) :
                new ObjectParameter("at", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var bgParameter = bg != null ?
                new ObjectParameter("bg", bg) :
                new ObjectParameter("bg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProject", id_tParameter, id_cParameter, atParameter, desParameter, naParameter, bgParameter);
        }
    
        public virtual int InsertTask(Nullable<int> id_p, Nullable<int> id_e, Nullable<int> st, string des, string na)
        {
            var id_pParameter = id_p.HasValue ?
                new ObjectParameter("id_p", id_p) :
                new ObjectParameter("id_p", typeof(int));
    
            var id_eParameter = id_e.HasValue ?
                new ObjectParameter("id_e", id_e) :
                new ObjectParameter("id_e", typeof(int));
    
            var stParameter = st.HasValue ?
                new ObjectParameter("st", st) :
                new ObjectParameter("st", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTask", id_pParameter, id_eParameter, stParameter, desParameter, naParameter);
        }
    
        public virtual int UpdateComposition(Nullable<int> id, Nullable<int> id_e, Nullable<int> id_t)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_eParameter = id_e.HasValue ?
                new ObjectParameter("id_e", id_e) :
                new ObjectParameter("id_e", typeof(int));
    
            var id_tParameter = id_t.HasValue ?
                new ObjectParameter("id_t", id_t) :
                new ObjectParameter("id_t", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateComposition", idParameter, id_eParameter, id_tParameter);
        }
    
        public virtual int UpdateProject(Nullable<int> id, Nullable<int> id_t, Nullable<int> id_c, Nullable<int> at, string des, string na, string bg)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_tParameter = id_t.HasValue ?
                new ObjectParameter("id_t", id_t) :
                new ObjectParameter("id_t", typeof(int));
    
            var id_cParameter = id_c.HasValue ?
                new ObjectParameter("id_c", id_c) :
                new ObjectParameter("id_c", typeof(int));
    
            var atParameter = at.HasValue ?
                new ObjectParameter("at", at) :
                new ObjectParameter("at", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var bgParameter = bg != null ?
                new ObjectParameter("bg", bg) :
                new ObjectParameter("bg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProject", idParameter, id_tParameter, id_cParameter, atParameter, desParameter, naParameter, bgParameter);
        }
    
        public virtual int UpdateTask(Nullable<int> id, Nullable<int> id_p, Nullable<int> id_e, Nullable<int> st, string des, string na)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_pParameter = id_p.HasValue ?
                new ObjectParameter("id_p", id_p) :
                new ObjectParameter("id_p", typeof(int));
    
            var id_eParameter = id_e.HasValue ?
                new ObjectParameter("id_e", id_e) :
                new ObjectParameter("id_e", typeof(int));
    
            var stParameter = st.HasValue ?
                new ObjectParameter("st", st) :
                new ObjectParameter("st", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTask", idParameter, id_pParameter, id_eParameter, stParameter, desParameter, naParameter);
        }
    }
}
